Import("env")
b = ModelBuilder(env)

parts_model = "magnetic-parts.scad"
interior_diameter = 100

b.STL(
    f"segment-{interior_diameter}mm.stl",
    "segment.scad",
    {"Inner_Diameter": interior_diameter},
)
b.STL(
    f"vacuum-attachment-{interior_diameter}mm.stl",
    "vacuum-attachment.scad",
    {"Inner_Diameter": interior_diameter, "Connector_Type": "female"},
)

for model_type in {"grommet", "connector"}:
    for magnet_holes in [0, 1]:
        fn_magnets = "-magnets" if magnet_holes else ""
        b.STL(
            (
                f"120mm-fan-{model_type}"
                f"-{interior_diameter}mm{fn_magnets}.stl"
            ),
            parts_model,
            {
                "Inner_Diameter": interior_diameter,
                "Model_Type": model_type,
                "Connector_Type": "male",
                "Plate_Type": "fan",
                "Grommet_Diameter": 120,
                "Magnet_Holes": magnet_holes,
                "Screw_Holes": 1,
                "Screw_Hole_Top": (
                    "inset"
                    if model_type == "grommet" and magnet_holes
                    else "none"
                ),
            },
        )

for model_type in {"connector", "grommet", "plate"}:
    connector_types = {"male"}
    if model_type == "connector":
        connector_types.add("female")
    for connector_type in connector_types:
        fn_connector_type = (
            f"-{connector_type}" if model_type == "connector" else ""
        )
        b.STL(
            (
                f"magnetic-{model_type}"
                f"-{interior_diameter}mm{fn_connector_type}.stl"
            ),
            parts_model,
            {
                "Inner_Diameter": interior_diameter,
                "Model_Type": model_type,
                "Connector_Type": connector_type,
                "Plate_Type": "round",
                "Grommet_Diameter": 101.6,
                "Magnet_Holes": 1,
                "Screw_Holes": 0 if model_type == "connector" else 1,
                "Screw_Hole_Top": 0 if model_type == "connector" else 1,
            },
        )


b.Image(
    "demo.png",
    "demo.scad",
    {
        "Inner_Diameter": interior_diameter,
        "Demo": "parts",
        "Enable_Plate_Knurling": 1,
    },
    view_options="axes,scales",
)

b.Image(
    "demo-measurement.png",
    "demo.scad",
    {
        "Inner_Diameter": interior_diameter,
        "Demo": "measurement",
        "Measurement_Text": 0,
    },
    camera="0,0,20,55,0,15,350",
)

b.Image(
    "part-segment.png", "segment.scad", {"Inner_Diameter": interior_diameter}
)
b.Image(
    "part-segment-options.gif",
    "segment.scad",
    [
        {
            "Inner_Diameter": interior_diameter,
            "Extra_Length": length,
            "Bend_Angle": angle,
            "Bend_Radius": radius,
        }
        for (length, angle, radius) in [
            (0, 0, 0),
            (0, 0, 0),
            (0, 15, 0),
            (0, 15, 30),
            (0, 30, 30),
            (30, 30, 30),
            (60, 30, 30),
            (60, 30, 0),
            (60, 15, 0),
            (60, 0, 0),
            (30, 0, 0),
        ]
    ],
)
b.Image(
    "part-vacuum-attachment.png",
    "vacuum-attachment.scad",
    {"Inner_Diameter": interior_diameter},
)
for model_type in {"connector", "grommet"}:
    for plate_type in {"round", "fan"}:
        b.Image(
            f"part-magnetic-{model_type}-{plate_type}.png",
            "magnetic-parts.scad",
            {
                "Inner_Diameter": interior_diameter,
                "Model_Type": model_type,
                "Plate_Type": plate_type,
            },
            camera="0,0,0,150,0,28,450" if model_type == "connector" else None,
        )

b.Image(
    "customization-example-render.png",
    "customization-example.scad",
    camera="0,0,0,40,0,28,350",
    view_options="axes,scales",
)

b.add_default_targets()

# vim: ft=python
