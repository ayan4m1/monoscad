Import("env")
b = ModelBuilder(env)

model = "spool-holder.scad"
filament_barrel_model = "filament-barrel.scad"

for file_name, part_name in {
    "barrel-full-size": "barrel",
    "nut-extended-size": "nut",
}.items():
    b.STL(
        f"spool-holder-{file_name}.stl",
        model,
        {"Part": part_name, "Nut_Extra_Length": 15},
        zip_dir="models-for-printing",
    )

for opts in GenerateOptions(chamfer=[(0, "-stock"), (1, "-chamfered")]):
    b.STL(
        f"filament-barrel{opts.chamfer_fn}.stl",
        filament_barrel_model,
        {"Chamfer": opts.chamfer},
        zip_dir="models-for-printing",
    )

b.Asset(
    "rogerquin-sv06-spool-holder-barrel-fitting.stl",
    zip_dir="models-for-printing",
)

b.Source(
    "*.scad",
    "rogerquin-SV06_Spool_Holder_extended_nut_med_res_V1.stl",
    "rogerquin-sv06-spool-holder-barrel.stl",
    "rogerquin-sv06-spool-holder-nut.stl",
    "rogerquin-sv06-spool-holder-sunlu-barrel-adapter.stl",
    "rogerquin-sv06-spool-holder-sunlu-nut.stl",
)

b.Image(
    "render-sunlu-combined-barrel.png",
    model,
    {"Part": "barrel"},
)
b.Image("render-sunlu-nut.png", model, {"Part": "nut"})
b.Image("render-all-parts-preview.png", model, {"Part": "preview"})

b.Image(
    "demo-nut-extension-sizes.gif",
    model,
    [
        {"Part": "nut", "Nut_Extra_Length": nut_length}
        for nut_length in [0, 5, 10, 15, 20, 25, 30]
    ],
)

b.add_default_targets()

# vim: ft=python
