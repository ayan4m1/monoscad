Import("env")
b = ModelBuilder(env)

model = "rugged-box-gridfinity.scad"
model_dependencies = ["rugged-box-library.scad"]

gridfinity_boxes = {
    "6x4x9-mine": [
        6,
        4,
        2,
        7,
        True,
        {
            "Latch_Style": "draw",
            "Hinge_End_Stops": 1,
            "Gridfinity_Stackable": 1,
            # Requires M3x40 screws for assembly (28 + 2 * 6)
            "Latch_Width": 28,
            "Rib_Width": 6,
        },
    ],
    "4x2x6-stackable": [
        4,
        2,
        2,
        4,
        False,
        {
            "Latch_Style": "clip",
            "Gridfinity_Stackable": 1,
        },
    ],
    "4x2x6-plain": [4, 2, 2, 4, False, {"Latch_Style": "clip"}],
    "1x1x3-plain": [1, 1, 1, 2, False, {"Latch_Style": "clip"}],
}

for box_name, (
    width,
    length,
    top_height,
    bottom_height,
    enable_handle,
    *params,
) in gridfinity_boxes.items():
    for opts in GenerateOptions(
        part=["top", "bottom", "latch", "stacking-latch", "handle"]
    ):
        if not enable_handle and opts.part == "handle":
            continue
        part_params = {
            **{
                "Part": opts.part,
                "Width": width,
                "Length": length,
                "Top_Height": top_height,
                "Bottom_Height": bottom_height,
                "Top_Grip": 1,
            },
            **(params[0] if params else {}),
        }
        b.STL(
            f"gridfinity-box-{box_name}-{opts.part}.stl",
            model,
            part_params,
            model_dependencies,
        )

b.add_default_targets()

# vim: ft=python
